import{_ as e,c as o,a2 as a,o as n}from"./chunks/framework.DPuwY6B9.js";const m=JSON.parse('{"title":"Protagonists","description":"","frontmatter":{"layout":"doc","title":"Protagonists","lang":"en-US"},"headers":[],"relativePath":"Notes/Protagonists.md","filePath":"Notes/Protagonists.md"}'),i={name:"Notes/Protagonists.md"};function r(s,t,h,d,l,c){return n(),o("div",null,t[0]||(t[0]=[a('<h1 id="protagonists" tabindex="-1">Protagonists <a class="header-anchor" href="#protagonists" aria-label="Permalink to &quot;Protagonists&quot;">​</a></h1><h2 id="the-player-protag-unity" tabindex="-1">The player / protag unity <a class="header-anchor" href="#the-player-protag-unity" aria-label="Permalink to &quot;The player / protag unity&quot;">​</a></h2><p>if character = action and action=gameplay, character = gameplay !!!!!</p><p>The framework &quot;external actions show what a character wants&quot; is not so easy to use since in many cases, the designer decides of the WANT (and in sandboxes, having an open WANT means playing a god or a pure avatar)</p><div class="tip custom-block"><p class="custom-block-title">Empathy vs Unity</p><p>In linear media, you only need to create <span class="highlight">EMPATHY</span>; in games, you need <span class="highlight">UNITY</span>, which is hard to do when your protagonist&#39;s characterization goes against your player&#39;s.</p></div><p>To still achieve this unity, <a href="https://www.youtube.com/watch?v=4mgK2hL33Vw" target="_blank" rel="noreferrer">Jeremy bernstein recommends</a> to focus on three aspects:</p><table tabindex="0"><thead><tr><th>Unity</th><th>Description</th><th>Importance</th><th>Toolbox</th></tr></thead><tbody><tr><td><em><strong>Unity of traits</strong></em></td><td>Sharing the same external traits as your protagonist</td><td>Anecdotal</td><td>Custom character creation tool</td></tr><tr><td><em><strong>Unity of action</strong></em></td><td>Spontaneously acting like the protagonist would</td><td>Variable: you can accept going against your style if you recognize it is the style of the protagonist</td><td>Don&#39;t make the player take stupid decision just to justify gameplay, even good</td></tr><tr><td><em><strong>Unity of purpose</strong></em></td><td>Sharing the same purpose as your protagonist</td><td>Critical, even if the other unities are not respected, player and protag can be partners (see OneShot)</td><td>Focus on what we want and the reason why we care</td></tr></tbody></table><h2 id="handling-emotions" tabindex="-1">Handling emotions <a class="header-anchor" href="#handling-emotions" aria-label="Permalink to &quot;Handling emotions&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title"><a href="https://youtu.be/_lp0libfp5M" target="_blank" rel="noreferrer">Andrew S. Walsh</a>:</p><p><span class="highlight">The emotions explored in the game are not necessarily those experienced by the player!</span></p></div><h3 id="three-manifestations-of-emotion-in-an-interactive-environment" tabindex="-1">Three manifestations of emotion in an interactive environment <a class="header-anchor" href="#three-manifestations-of-emotion-in-an-interactive-environment" aria-label="Permalink to &quot;Three manifestations of emotion in an interactive environment&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Type</th><th>Principle</th></tr></thead><tbody><tr><td><em><strong>Simulation</strong></em></td><td>Same emotions explored in the game and experienced by the player</td></tr><tr><td><em><strong>Representation</strong></em></td><td>The protagonist is inserted in between; the emotional distance allows for an easier handling of negatve emotions. For the same reason, positive emotions need to be inferred from the protagonist&#39;s behavior.</td></tr><tr><td><em><strong>Abstraction</strong></em></td><td>The emotion is expressed as a concept, eg. through player stats</td></tr></tbody></table><p>Those types can be combined as needed.</p><h3 id="communicating-emotion" tabindex="-1">Communicating emotion <a class="header-anchor" href="#communicating-emotion" aria-label="Permalink to &quot;Communicating emotion&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Type</th><th>Characteristics</th></tr></thead><tbody><tr><td><em><strong>Tell emotions</strong></em></td><td>No interpretation phase. Without context, probably no feeling any emotional response. Compatible with abstraction.</td></tr><tr><td><em><strong>Show emotions</strong></em></td><td>Heavily reliant on interpretation, mistakes are possible. Player is active, the reaction is natural.</td></tr><tr><td><em><strong>Do emotions</strong></em></td><td>Context and player&#39;s interpretation make the action we perform signifying, it&#39;s not just a matter of &quot;press X to be happy&quot;. Can be complicated with choice between several options, in the spirit of <a href="./Choices#notable-choice-types">reflective choices</a>.</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">In summary</p><ol><li>Who is feeling?</li><li>What emotions is the player supposed to feel?</li><li>How to communicate those emotions?</li><li>Why is the player supposed to feel those emotions?</li></ol></div>',15)]))}const g=e(i,[["render",r]]);export{m as __pageData,g as default};
